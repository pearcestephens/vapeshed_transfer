CREATE TABLE `vend_suppliers` (
  `id` varchar(100) NOT NULL COMMENT 'Unique identifier for each supplier in the system.',
  `name` varchar(100) NOT NULL COMMENT 'The supplier''s business or brand name for identification and communication.',
  `source` varchar(45) DEFAULT NULL COMMENT 'Indicates the origin or method by which the supplier was added to the system.',
  `description` varchar(45) DEFAULT NULL COMMENT 'Provides a brief overview of the supplier''s product line or brand association.',
  `deleted_at` varchar(45) DEFAULT NULL COMMENT 'Indicates when a supplier was removed from active use in the system.',
  `version` varchar(45) DEFAULT NULL,
  `email` varchar(100) DEFAULT NULL COMMENT 'Supplier''s primary email address for communication and order processing.',
  `claim_email` varchar(150) DEFAULT NULL,
  `bank_account` varchar(45) DEFAULT NULL COMMENT 'Stores the supplier''s bank account details for processing payments.',
  `phone` varchar(45) DEFAULT NULL COMMENT 'Stores the contact number for reaching out to the supplier.',
  `contact_name` varchar(45) DEFAULT NULL COMMENT 'Name of the primary contact person for supplier communication.',
  `show_in_system` int(11) DEFAULT 1 COMMENT 'Indicates if the supplier is visible and active in the system for transactions and operations.',
  `automatic_ordering` int(11) NOT NULL DEFAULT 0 COMMENT 'Indicates if the supplier is set up for automatic order placement.',
  `automatic_transferring` int(11) NOT NULL DEFAULT 1 COMMENT 'Indicates if supplier transfers are automated within the system.',
  `automatic_transferring_based_on_sales_data` int(11) DEFAULT 0 COMMENT 'Indicates if stock transfers are triggered automatically based on sales trends.',
  `notification_eligible` int(11) NOT NULL DEFAULT 1 COMMENT 'Indicates if the supplier is eligible to receive notifications from the system.',
  `credit_sla_days` int(11) DEFAULT NULL,
  `enable_product_returns` int(11) NOT NULL DEFAULT 1 COMMENT 'Indicates if the supplier allows products to be returned.',
  `enable_wholesale_show_estimated_delivery` int(11) NOT NULL DEFAULT 0 COMMENT 'Indicates if wholesale customers can view estimated delivery dates for orders.',
  `automatic_ordering_moq` int(11) NOT NULL DEFAULT 30 COMMENT 'Minimum quantity required to trigger automatic ordering from this supplier.',
  `automatic_product_forecasting` int(11) NOT NULL DEFAULT 0 COMMENT 'Indicates if the supplier''s products are included in automated demand forecasting.',
  `website` varchar(45) DEFAULT NULL,
  `contact_person` varchar(45) DEFAULT NULL,
  `brand_logo_url` varchar(45) DEFAULT NULL,
  `primary_color` varchar(45) DEFAULT NULL,
  `secondary_color` varchar(45) DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `id_UNIQUE` (`id`),
  KEY `ix_vend_suppliers_auto` (`automatic_transferring`),
  KEY `ix_vs_name` (`name`),
  KEY `ix_vs_email` (`email`),
  KEY `ix_vs_visible_name` (`show_in_system`,`name`),
  KEY `ix_vs_notify_enabled` (`notification_eligible`,`id`),
  KEY `ix_vs_returns_enabled` (`enable_product_returns`,`id`),
  KEY `ix_vs_auto_ordering` (`automatic_ordering`,`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Sentence: This table contains records of suppliers from whom The Vape Shed sources products, used for managing supplier relationships and procurement processes.  \nTags: supplier list, active suppliers, supplier management, procurement, vendor contacts, supplier status, TVS range suppliers, supplier sourcing';

CREATE TABLE `vend_sales_line_items` (
  `sales_increment_id` int(11) NOT NULL COMMENT 'Unique identifier for each sales transaction line item in sequential order.',
  `id` varchar(36) NOT NULL COMMENT 'Unique identifier for each sales line item in the system.',
  `product_id` varchar(36) NOT NULL COMMENT 'Unique identifier for the product sold in each transaction line.',
  `tax_id` varchar(36) NOT NULL COMMENT 'Identifies the specific tax rate applied to the sale item for accurate tax calculation.',
  `discount_total` decimal(16,6) DEFAULT NULL COMMENT 'Total discount amount applied to the sale line item.',
  `discount` decimal(16,6) DEFAULT NULL COMMENT 'The discount applied to a single item in a sales transaction.',
  `price_total` decimal(16,6) DEFAULT NULL COMMENT 'The final sale price of a product line item after discounts and taxes.',
  `price` decimal(16,6) DEFAULT NULL COMMENT 'The selling price of a single unit of the product before discounts and taxes.',
  `cost_total` decimal(16,6) NOT NULL COMMENT 'The total cost incurred by the business for the items in a sales transaction.',
  `cost` decimal(16,6) NOT NULL COMMENT 'The purchase price of a single unit of the product sold in a transaction.',
  `tax_total` decimal(16,6) DEFAULT NULL COMMENT 'The total tax amount applied to this sales line item.',
  `tax` decimal(16,6) DEFAULT NULL COMMENT 'The tax amount applied to a specific product line in a sales transaction.',
  `quantity` int(11) NOT NULL COMMENT 'The number of units of a product sold in a single transaction.',
  `loyalty_value` decimal(16,6) DEFAULT NULL COMMENT 'The loyalty points earned from this sale line item for customer rewards.',
  `note` mediumtext DEFAULT NULL COMMENT 'Additional details or comments about the sale item for staff reference.',
  `price_set` int(11) NOT NULL COMMENT 'Indicates if the item''s price was manually adjusted during the sale.',
  `status` varchar(30) NOT NULL COMMENT 'Indicates the current processing stage of the sales line item in the transaction.',
  `sequence` int(11) NOT NULL COMMENT 'Indicates the order of items within a single sale transaction.',
  `unit_discount` decimal(16,6) DEFAULT NULL COMMENT 'The discount applied to each individual item in a sale transaction.',
  `unit_loyalty_value` decimal(13,5) NOT NULL COMMENT 'The loyalty points earned per unit of product sold.',
  `total_cost` decimal(16,6) DEFAULT NULL COMMENT 'The total expense incurred by the business for the items in this sales line.',
  `unit_price` decimal(16,6) DEFAULT NULL COMMENT 'The selling price of a single unit of a product before any discounts or taxes.',
  `unit_cost` decimal(16,6) DEFAULT NULL COMMENT 'The cost per unit for each product sold, used to calculate profit margins.',
  `total_discount` decimal(16,6) DEFAULT NULL COMMENT 'The total monetary value of all discounts applied to a sales line item.',
  `total_price` decimal(16,6) DEFAULT NULL COMMENT 'The final amount charged to the customer for this line item, including any discounts and taxes.',
  `total_loyalty_value` decimal(16,6) DEFAULT NULL COMMENT 'The total loyalty points earned from this sale line item for customer rewards.',
  `total_tax` decimal(16,6) DEFAULT NULL COMMENT 'The total tax amount applied to this sales line item for reporting and accounting purposes.',
  `is_return` int(11) NOT NULL COMMENT 'Indicates if the item was returned by the customer (1 for yes, 0 for no).',
  `unit_tax` decimal(16,6) DEFAULT NULL COMMENT 'The tax amount applied to a single unit of the product in a sale.',
  `sale_id` varchar(36) NOT NULL COMMENT 'Unique identifier linking each line item to its corresponding sale transaction.',
  PRIMARY KEY (`sales_increment_id`,`id`),
  KEY `idx_quantity_return` (`quantity`,`is_return`),
  KEY `idx_status` (`status`),
  KEY `idx_sale_id` (`sale_id`),
  KEY `ix_vsli_salesinc_prod_status_return` (`sales_increment_id`,`product_id`,`status`,`is_return`),
  KEY `idx_vsli_status_product` (`status`,`product_id`),
  KEY `idx_vsli_covering_agg` (`status`,`product_id`,`quantity`,`price_total`,`tax_total`),
  KEY `idx_vsli_sales_inc_status` (`sales_increment_id`,`status`),
  KEY `idx_sale_line_product_outlet` (`product_id`,`sales_increment_id`,`is_return`),
  KEY `idx_covering_ultra_fast` (`product_id`,`is_return`,`sales_increment_id`,`quantity`),
  CONSTRAINT `vendSaleIncrementID` FOREIGN KEY (`sales_increment_id`) REFERENCES `vend_sales` (`increment_id`),
  CONSTRAINT `vendUUIDIncrementID` FOREIGN KEY (`sale_id`) REFERENCES `vend_sales` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Sentence: This table contains detailed records of individual items sold in each transaction, used for tracking sales performance and inventory management.  \nTags: sales report, transaction details, item sales analysis, inventory tracking, discount analysis, tax calculation, product performance';

CREATE TABLE `vend_sales` (
  `increment_id` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Unique identifier for each sale transaction in the system.',
  `id` varchar(36) NOT NULL COMMENT 'Unique identifier for each sale transaction in the system.',
  `outlet_id` varchar(36) NOT NULL COMMENT 'Identifies the specific store location where the sale was made.',
  `register_id` varchar(36) NOT NULL COMMENT 'Identifies the specific cash register used for the sale transaction.',
  `user_id` varchar(36) NOT NULL COMMENT 'Identifies the staff member who processed the sale transaction.',
  `customer_id` varchar(36) NOT NULL COMMENT 'Unique identifier for the customer associated with each sale transaction.',
  `invoice_number` int(11) NOT NULL COMMENT 'Unique identifier for each sales transaction invoice.',
  `status` varchar(30) NOT NULL COMMENT 'Indicates the current progress or completion stage of a sale transaction.',
  `note` mediumtext NOT NULL COMMENT 'Additional details or comments related to a specific sale transaction.',
  `short_code` varchar(15) NOT NULL COMMENT 'Unique identifier for quick reference to specific sales transactions.',
  `return_for` varchar(100) DEFAULT NULL COMMENT 'Links a sale to its original transaction when processing a return.',
  `total_price` decimal(16,6) DEFAULT NULL COMMENT 'The total amount charged for a sale, including any discounts or returns.',
  `total_tax` decimal(16,6) DEFAULT NULL COMMENT 'The total tax amount applied to a sale transaction.',
  `total_loyalty` decimal(16,6) DEFAULT NULL COMMENT 'The total loyalty points earned by the customer from this sale.',
  `created_at` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT 'Timestamp of when the sale record was initially created in the system.',
  `updated_at` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT 'Timestamp of the last modification made to the sales record.',
  `sale_date` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT 'The date and time when the sale transaction was completed.',
  `deleted_at` timestamp NULL DEFAULT NULL COMMENT 'Timestamp indicating when the sale record was removed from active status.',
  `version` bigint(100) NOT NULL,
  `receipt_number` int(11) NOT NULL COMMENT 'Unique identifier for each sales transaction receipt issued to customers.',
  `version_max` bigint(100) DEFAULT NULL,
  `payments` longtext DEFAULT NULL,
  `sale_date_d` date GENERATED ALWAYS AS (cast(`sale_date` as date)) STORED,
  PRIMARY KEY (`increment_id`),
  UNIQUE KEY `SALE_ID_INDEX` (`id`),
  KEY `idx_user_id` (`user_id`),
  KEY `ix_vs_outlet_date_inc` (`outlet_id`,`sale_date`,`increment_id`),
  KEY `ix_vs_date_inc` (`sale_date`,`increment_id`),
  KEY `ix_vs_customer_date` (`customer_id`,`sale_date`),
  KEY `ix_vs_dateD_inc` (`sale_date_d`,`increment_id`),
  KEY `ix_vs_outlet_dateD_inc` (`outlet_id`,`sale_date_d`,`increment_id`),
  KEY `idx_vend_sales_performance` (`outlet_id`,`sale_date`,`status`,`total_price`),
  KEY `idx_vend_sales_user_date_status` (`user_id`,`created_at`,`status`),
  KEY `idx_vs_outlet_date_status` (`outlet_id`,`sale_date`,`status`),
  KEY `idx_vs_customer_date` (`customer_id`,`sale_date`),
  KEY `idx_vs_user_date_status` (`user_id`,`sale_date`,`status`),
  KEY `idx_vs_increment_outlet_date` (`increment_id`,`outlet_id`,`sale_date`),
  KEY `idx_sales_outlet_increment` (`outlet_id`,`increment_id`) USING BTREE,
  KEY `idx_vend_sales_web_processing` (`outlet_id`,`status`,`sale_date`,`created_at`)
) ENGINE=InnoDB AUTO_INCREMENT=1176280722 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Sentence: This table contains records of individual sales transactions processed through the Vend point-of-sale system, used by the business to track sales performance, manage inventory, and analyze customer purchasing behavior.  \nTags: sales reports, transaction history, closed sales, sales by outlet, sales by register, customer purchase analysis, daily sales summary, sales performance, inventory management, sales status closed, sales status open.';

CREATE TABLE `vend_products_outlet_transfer_settings` (
  `product_id` varchar(45) NOT NULL COMMENT 'Unique identifier for each product involved in outlet transfer settings.',
  `outlet_id` varchar(45) NOT NULL COMMENT 'Identifies the specific store location for product transfer settings.',
  `override_default_product_settings` int(11) NOT NULL DEFAULT 0 COMMENT 'Indicates if custom transfer settings are used for a product at a specific outlet.',
  `enable_product_transfer` int(11) NOT NULL DEFAULT 1 COMMENT 'Indicates if transferring this product to the outlet is allowed.',
  `enable_qty_transfer_limit` int(11) NOT NULL DEFAULT 0 COMMENT 'Activates a limit on the quantity of products transferred between outlets.',
  `enable_transfer_threshold` int(11) NOT NULL DEFAULT 0 COMMENT 'Indicates if a minimum stock level must be met before transferring products to an outlet.',
  `maximum_qty_to_send` int(11) NOT NULL DEFAULT 30 COMMENT 'The maximum number of units allowed to be transferred to an outlet at one time.',
  `only_send_when_below` int(11) NOT NULL DEFAULT 20 COMMENT 'Transfers products to an outlet only when its stock falls below this quantity.',
  `send_in_multiple_qty` int(11) NOT NULL DEFAULT 1 COMMENT 'Specifies the quantity multiples for transferring products to outlets.',
  `minimum_qty_left_at_warehouse` int(11) NOT NULL DEFAULT 0 COMMENT 'Minimum stock level to maintain at the warehouse before transferring more to outlets.',
  PRIMARY KEY (`product_id`,`outlet_id`),
  UNIQUE KEY `ux_vp_outlet_settings_prod_outlet` (`product_id`,`outlet_id`),
  KEY `outletID_idx` (`outlet_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Sentence: This table contains settings for transferring products between outlets, allowing the business to manage inventory levels and ensure optimal stock distribution across locations.  \nTags: product transfer settings, outlet inventory management, stock transfer limits, transfer threshold settings, inventory distribution, product transfer enablement, outlet stock optimization.';

CREATE TABLE `vend_products` (
  `id` varchar(100) NOT NULL DEFAULT '' COMMENT 'Unique identifier for each product entry in the system.',
  `source_id` varchar(200) DEFAULT NULL,
  `source_variant_id` mediumtext DEFAULT NULL COMMENT 'Unique identifier for a product variant from the original supplier or source.',
  `variant_parent_id` mediumtext DEFAULT NULL COMMENT 'Identifies the main product for which this item is a variant.',
  `name` varchar(255) DEFAULT NULL,
  `variant_name` varchar(255) DEFAULT NULL,
  `handle` varchar(200) DEFAULT NULL,
  `sku` varchar(200) DEFAULT NULL,
  `supplier_code` int(11) DEFAULT NULL COMMENT 'Unique identifier for the product''s supplier in the business system.',
  `active` int(11) NOT NULL COMMENT 'Indicates if the product is currently available for sale in the system.',
  `has_inventory` int(11) NOT NULL COMMENT 'Indicates if the product is currently in stock for sale.',
  `is_composite` int(11) NOT NULL COMMENT 'Indicates if the product is made up of multiple components or items.',
  `description` longtext DEFAULT NULL,
  `image_url` text DEFAULT NULL,
  `created_at` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT 'Timestamp indicating when the product record was first added to the database.',
  `updated_at` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00' COMMENT 'Timestamp of the last modification made to the product details.',
  `deleted_at` timestamp NULL DEFAULT '0000-00-00 00:00:00' COMMENT 'Timestamp indicating when the product was removed from active listings.',
  `type` mediumtext DEFAULT NULL,
  `account_code` mediumtext DEFAULT NULL,
  `version` bigint(20) NOT NULL,
  `supplier` mediumtext DEFAULT NULL COMMENT 'The supplier''s name for each product, used for ordering and inventory management.',
  `source` text DEFAULT NULL,
  `account_code_purchase` mediumtext DEFAULT NULL,
  `has_variants` mediumtext DEFAULT NULL COMMENT 'Indicates if the product has different versions or options available for sale.',
  `brand` varchar(255) DEFAULT NULL,
  `variant_options` text DEFAULT NULL,
  `brand_id` varchar(200) DEFAULT NULL COMMENT 'Unique identifier linking each product to its associated brand for inventory and reporting purposes.',
  `price_including_tax` decimal(13,5) NOT NULL COMMENT 'The total selling price of a product, including all applicable taxes.',
  `loyalty_amount` decimal(13,5) DEFAULT NULL COMMENT 'The loyalty amount awarded to customers for purchasing this product.',
  `price_excluding_tax` decimal(13,5) NOT NULL COMMENT 'The pre-tax selling price of a product for internal pricing and financial analysis.',
  `product_type_id` mediumtext DEFAULT NULL,
  `supplier_id` varchar(200) DEFAULT NULL COMMENT 'Unique identifier for the supplier providing this product.',
  `button_order` int(11) NOT NULL,
  `is_active` int(11) NOT NULL COMMENT 'Indicates whether the product is currently available for sale or use in operations.',
  `image_thumbnail_url` text DEFAULT NULL,
  `supply_price` decimal(13,5) NOT NULL COMMENT 'The cost price paid to suppliers for each product unit before any markup or taxes.',
  `avg_weight_grams` int(11) DEFAULT NULL,
  `dont_show_in_low_stock` int(11) NOT NULL DEFAULT 0 COMMENT 'Indicates if a product should be excluded from low stock alerts.',
  `dont_insert_into_website` int(11) DEFAULT 0 COMMENT 'Indicates if a product should be excluded from being listed on the website.',
  `harp_product_status` int(11) NOT NULL DEFAULT 0 COMMENT 'Indicates the product''s availability status in the HARP system.',
  `is_deleted` tinyint(1) GENERATED ALWAYS AS (`deleted_at` <> '0000-00-00 00:00:00') STORED,
  PRIMARY KEY (`id`),
  KEY `idx_supplier_active` (`supplier_id`,`is_active`,`active`,`deleted_at`),
  KEY `ix_vend_products_brand_supplier` (`brand_id`,`supplier_id`),
  KEY `ix_vend_products_deleted` (`deleted_at`),
  KEY `ix_vend_products_active` (`active`),
  KEY `ix_vp_flags` (`is_deleted`,`is_active`,`active`,`has_inventory`),
  KEY `idx_vend_products_active_inventory` (`active`,`has_inventory`,`is_active`,`supplier_id`,`brand_id`),
  FULLTEXT KEY `ProductFullSearch` (`name`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Sentence: This table contains records of all products available for sale through The Vape Shed''s point-of-sale system, used for inventory management and sales tracking.  \nTags: product catalog, inventory list, sales tracking, product availability, stock management, product search, SKU lookup, variant details, pricing information, product updates';

CREATE TABLE `vend_products_default_transfer_settings` (
  `product_id` varchar(45) NOT NULL COMMENT 'Unique identifier for each product to manage transfer settings.',
  `enable_product_transfer` int(11) NOT NULL DEFAULT 1 COMMENT 'Indicates if a product is eligible for transfer between locations.',
  `enable_qty_transfer_limit` int(11) NOT NULL DEFAULT 0 COMMENT 'Indicates if a limit is set on the quantity of product transfers.',
  `enable_transfer_threshold` int(11) NOT NULL DEFAULT 0 COMMENT 'Indicates if a product''s transfer is subject to a minimum stock threshold.',
  `maximum_qty_to_send` int(11) NOT NULL DEFAULT 30 COMMENT 'The maximum number of units allowed to be transferred for a product at one time.',
  `only_send_when_below` int(11) NOT NULL DEFAULT 20 COMMENT 'Transfer products only when stock falls below this quantity at the destination.',
  `send_in_multiple_qty` int(11) NOT NULL DEFAULT 1 COMMENT 'Specifies the quantity increments for transferring products between locations.',
  `minimum_qty_left_at_warehouse` int(11) NOT NULL DEFAULT 0 COMMENT 'The minimum stock level to maintain at the warehouse before transferring more.',
  PRIMARY KEY (`product_id`),
  UNIQUE KEY `ux_vp_default_settings_prod` (`product_id`),
  CONSTRAINT `productID` FOREIGN KEY (`product_id`) REFERENCES `vend_products` (`id`) ON DELETE CASCADE ON UPDATE NO ACTION
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Sentence: This table stores default settings for transferring products between locations, used to automate and manage inventory distribution efficiently across The Vape Shed''s outlets and warehouses.  \nTags: product transfer settings, inventory distribution, transfer automation, stock management, warehouse thresholds, outlet restocking, transfer limits';

CREATE TABLE `vend_product_qty_history` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Unique identifier for each record of product quantity changes.',
  `product_id` varchar(45) NOT NULL COMMENT 'Unique identifier for each product to track inventory changes over time.',
  `qty` int(11) NOT NULL COMMENT 'The number of units of a product recorded at a specific outlet and time.',
  `outlet_id` varchar(45) NOT NULL COMMENT 'Identifies the specific store location associated with the product quantity change.',
  `created_at` timestamp NOT NULL DEFAULT current_timestamp(),
  PRIMARY KEY (`id`),
  KEY `outletIDIndex` (`outlet_id`),
  KEY `idx_product_outlet_created` (`product_id`,`outlet_id`,`created_at`),
  KEY `idx_created_outlet` (`created_at`,`outlet_id`)
) ENGINE=InnoDB AUTO_INCREMENT=110374655 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Sentence: This table records historical changes in product quantities across different outlets, used for tracking inventory levels and analyzing stock movement over time.  \nTags: inventory history, stock movement report, product quantity changes, outlet stock levels, inventory tracking, historical stock analysis, product restocking trends';

CREATE TABLE `vend_outlets` (
  `id` varchar(100) NOT NULL COMMENT 'Unique identifier for each retail outlet in the system.',
  `register_id` varchar(100) DEFAULT NULL COMMENT 'Unique identifier for the cash register used at a specific retail outlet.',
  `name` varchar(100) NOT NULL COMMENT 'The name of the physical store location for inventory and sales tracking.',
  `default_tax_id` varchar(100) DEFAULT NULL COMMENT 'Identifies the tax rate applied by default to sales at this outlet.',
  `currency` varchar(100) DEFAULT NULL COMMENT 'The currency used for transactions at this outlet.',
  `currency_symbol` varchar(100) DEFAULT NULL COMMENT 'Symbol used to represent the currency for transactions at this outlet.',
  `display_prices` varchar(100) DEFAULT NULL COMMENT 'Indicates whether prices shown to customers include tax.',
  `time_zone` varchar(100) DEFAULT NULL COMMENT 'Indicates the local time zone for scheduling and coordinating store operations.',
  `physical_street_number` varchar(45) DEFAULT NULL COMMENT 'Stores the street number for the physical location of the vendor outlet.',
  `physical_street` varchar(45) DEFAULT NULL COMMENT 'Street name for the outlet''s physical location.',
  `physical_address_1` varchar(100) DEFAULT NULL COMMENT 'Stores the first line of the outlet''s physical address for location identification.',
  `physical_address_2` varchar(100) DEFAULT NULL COMMENT 'Additional address details for a vendor outlet, such as a building or unit name.',
  `physical_suburb` varchar(100) DEFAULT NULL COMMENT 'Identifies the suburb where the physical store is located for delivery and regional analysis.',
  `physical_city` varchar(255) DEFAULT NULL,
  `physical_postcode` varchar(100) DEFAULT NULL COMMENT 'The postcode for the physical location of the retail outlet.',
  `physical_state` varchar(100) DEFAULT NULL COMMENT 'Indicates the region or province where the outlet is located for logistical and reporting purposes.',
  `physical_country_id` varchar(100) DEFAULT NULL COMMENT 'Stores the country code where the physical outlet is located for business operations.',
  `physical_phone_number` varchar(45) DEFAULT NULL COMMENT 'Contact number for reaching the physical store location.',
  `deleted_at` timestamp NULL DEFAULT NULL COMMENT 'Timestamp indicating when the outlet was marked as inactive or removed from active use.',
  `version` bigint(20) NOT NULL,
  `turn_over_rate` float NOT NULL DEFAULT 5 COMMENT 'The rate at which inventory is sold and replaced at this outlet.',
  `automatic_ordering` int(11) NOT NULL DEFAULT 1 COMMENT 'Indicates if the outlet uses an automated system for placing stock orders.',
  `facebook_page_id` varchar(45) DEFAULT NULL COMMENT 'Unique identifier for the outlet''s Facebook page to manage social media presence and customer interactions.',
  `gss_token` varchar(100) DEFAULT NULL COMMENT 'Unique identifier for integrating Google services with the outlet.',
  `google_page_id` varchar(100) DEFAULT NULL COMMENT 'Unique identifier for the store''s Google business page, used for managing online presence and reviews.',
  `total_review_count` int(11) DEFAULT NULL COMMENT 'The total number of customer reviews received by this outlet.',
  `google_review_rating` float(2,1) DEFAULT NULL COMMENT 'Average customer rating for the outlet based on Google reviews.',
  `store_code` varchar(45) DEFAULT NULL COMMENT 'Unique identifier for each store location used in operations and reporting.',
  `magento_warehouse_id` int(11) DEFAULT NULL COMMENT 'Links each outlet to its corresponding warehouse in the Magento system.',
  `google_link` varchar(100) DEFAULT NULL COMMENT 'URL for the store''s Google Maps location to assist with navigation and customer visits.',
  `outlet_lat` varchar(45) DEFAULT NULL COMMENT 'Latitude coordinate for the outlet''s physical location.',
  `outlet_long` varchar(45) DEFAULT NULL COMMENT 'Geographical longitude coordinate for the outlet''s location.',
  `website_active` int(11) NOT NULL DEFAULT 1 COMMENT 'Indicates if the outlet''s website is currently active for online sales.',
  `website_outlet_id` int(11) DEFAULT NULL COMMENT 'Unique identifier for the outlet''s online presence within the company''s website system.',
  `deposit_card_id` int(11) DEFAULT NULL COMMENT 'Identifies the card used for deposits at this outlet for financial tracking.',
  `vape_hq_shipping_id` varchar(45) DEFAULT NULL COMMENT 'Unique identifier for tracking shipments from Vape HQ to this outlet.',
  `banking_days_allocated` int(11) NOT NULL DEFAULT 7 COMMENT 'Number of days allocated for banking transactions at this outlet.',
  `email` varchar(45) DEFAULT NULL COMMENT 'Email address for contacting the specific store location.',
  `nz_post_api_key` varchar(45) DEFAULT NULL COMMENT 'API key for accessing New Zealand Post services for shipping and logistics.',
  `nz_post_subscription_key` varchar(45) DEFAULT NULL COMMENT 'Unique identifier for managing NZ Post subscription services for each outlet.',
  `ip_address` varchar(45) DEFAULT NULL COMMENT 'Identifies the network location of the outlet for security and connectivity purposes.',
  `deputy_location_id` int(11) NOT NULL DEFAULT 0 COMMENT 'Links the outlet to its corresponding location in the Deputy workforce management system.',
  `eftpos_merchant_id` int(11) DEFAULT NULL COMMENT 'Unique identifier for processing card payments at this outlet.',
  `created_at` timestamp NOT NULL DEFAULT current_timestamp(),
  `is_warehouse` int(11) NOT NULL DEFAULT 0 COMMENT 'Indicates if the outlet functions as a warehouse (1 for yes, 0 for no).',
  PRIMARY KEY (`id`),
  UNIQUE KEY `register_id_UNIQUE` (`register_id`),
  UNIQUE KEY `magento_warehouse_id_UNIQUE` (`website_outlet_id`),
  KEY `ix_vend_outlets_warehouse` (`is_warehouse`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Sentence: This table contains records of all retail outlets for The Vape Shed, used to manage and track store-specific operations and sales data.  \nTags: outlet locations, store management, sales by outlet, tax settings, currency settings, price display settings, store timezone settings';

CREATE TABLE `vend_inventory` (
  `id` varchar(100) NOT NULL COMMENT 'Unique identifier for each inventory record in the system.',
  `outlet_id` varchar(100) NOT NULL COMMENT 'Identifies the specific store location where the product inventory is held.',
  `product_id` varchar(100) NOT NULL COMMENT 'Unique identifier for each product in the inventory system.',
  `inventory_level` int(11) NOT NULL COMMENT 'The current stock quantity of a product available at a specific outlet.',
  `current_amount` int(11) NOT NULL COMMENT 'The actual stock quantity available for a product at a specific outlet.',
  `version` bigint(20) NOT NULL,
  `reorder_point` int(11) DEFAULT NULL COMMENT 'Minimum stock level triggering a reorder to prevent product shortages.',
  `reorder_amount` int(11) DEFAULT NULL COMMENT 'The quantity of a product to order when stock reaches the reorder point.',
  `deleted_at` timestamp NULL DEFAULT NULL COMMENT 'Timestamp indicating when the inventory record was marked as inactive or removed.',
  `average_cost` decimal(16,6) NOT NULL COMMENT 'The average cost of acquiring a product, used for pricing and profitability analysis.',
  `sync_status` enum('synced','pending','failed','conflict') DEFAULT 'synced' COMMENT 'Tracks synchronization status with Vend API',
  `last_sync_attempt` timestamp NULL DEFAULT NULL COMMENT 'When sync was last attempted',
  `last_sync_success` timestamp NULL DEFAULT NULL COMMENT 'When sync was last successful',
  `last_sync_error` timestamp NULL DEFAULT NULL COMMENT 'When sync last failed',
  `pending_operation_id` varchar(100) DEFAULT NULL COMMENT 'Operation ID for pending sync operations',
  `vend_version_tracking` varchar(50) DEFAULT NULL COMMENT 'Vend record version for conflict detection',
  PRIMARY KEY (`id`),
  KEY `product_id` (`product_id`),
  KEY `outlet_id` (`outlet_id`),
  KEY `ix_vend_inventory_outlet_product` (`outlet_id`,`product_id`),
  KEY `ix_vend_inventory_level` (`inventory_level`),
  KEY `ix_vi_outlet_amt_prod` (`outlet_id`,`deleted_at`,`current_amount`,`product_id`),
  KEY `idx_vend_inventory_covering` (`product_id`,`outlet_id`,`inventory_level`),
  KEY `idx_sync_status` (`sync_status`,`last_sync_attempt`) COMMENT 'Fast lookup for sync monitoring dashboard',
  KEY `idx_pending_operations` (`pending_operation_id`,`sync_status`) COMMENT 'Fast lookup for pending operations cleanup'
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Sentence: This table contains records of inventory levels for products at various outlets, used by the business to manage stock levels and trigger reorders when necessary.  \nTags: inventory report, stock levels, reorder alerts, outlet inventory, product availability, stock management, reorder threshold, inventory audit, low stock warning, restock planning.';

CREATE TABLE `vend_category_map` (
  `vend_category_id` varchar(50) NOT NULL,
  `target_category_id` varchar(50) NOT NULL,
  `created_at` timestamp NOT NULL DEFAULT current_timestamp(),
  `notes` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`vend_category_id`),
  KEY `idx_target` (`target_category_id`),
  KEY `ix_vend_category_map_vendid` (`vend_category_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE `vend_categories` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `categoryID` varchar(50) NOT NULL,
  `name` varchar(255) NOT NULL DEFAULT '',
  `nodeDepth` int(11) DEFAULT 0,
  `fullPathName` text DEFAULT NULL,
  `leftNode` int(11) DEFAULT 0,
  `rightNode` int(11) DEFAULT 0,
  `createTime` datetime DEFAULT NULL,
  `timeStamp` datetime DEFAULT NULL,
  `parentID` varchar(50) DEFAULT NULL,
  `deleted_at` datetime DEFAULT NULL,
  `created_at` timestamp NOT NULL DEFAULT current_timestamp(),
  `updated_at` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),
  `root_category_id` varchar(255) DEFAULT NULL,
  `leaf_category` tinyint(1) DEFAULT 0,
  `category_path_json` text DEFAULT NULL,
  `parent_category_id` varchar(255) DEFAULT NULL,
  `category_path` text DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `categoryID` (`categoryID`),
  KEY `idx_name` (`name`),
  KEY `idx_parent` (`parentID`),
  KEY `idx_deleted` (`deleted_at`),
  KEY `idx_node_depth` (`nodeDepth`),
  KEY `ix_vc_deleted_name` (`deleted_at`,`name`),
  KEY `ix_vc_name` (`name`)
) ENGINE=InnoDB AUTO_INCREMENT=35804 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE `vend_brands` (
  `id` varchar(45) NOT NULL COMMENT 'Unique identifier for each vendor brand in the system.',
  `name` varchar(100) NOT NULL COMMENT 'The brand name of a vendor whose products are available for sale.',
  `deleted_at` varchar(45) DEFAULT NULL COMMENT 'Indicates when a brand was removed from active use in the system.',
  `version` varchar(45) NOT NULL,
  `enable_store_transfers` int(11) NOT NULL DEFAULT 1 COMMENT 'Indicates if products from this brand can be transferred between stores.',
  PRIMARY KEY (`id`),
  KEY `ix_vend_brands_enable` (`enable_store_transfers`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Sentence: This table contains records of vape brands available for sale, used by the business to manage inventory and facilitate store transfers.  \nTags: Brand Management, Inventory Reports, Store Transfers, Active Brands, Brand Listings';

CREATE TABLE `product_types` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Unique identifier for each product type in the system.',
  `code` varchar(50) NOT NULL COMMENT 'Identifies the category of vape products for inventory and sales tracking.',
  `label` varchar(100) DEFAULT NULL COMMENT 'Describes the category name for a type of product sold, like "Disposable Vapes" or "Starter Kits".',
  `description` mediumtext DEFAULT NULL COMMENT 'Provides a brief overview of the product category for staff reference and customer understanding.',
  `active` tinyint(1) DEFAULT 1 COMMENT 'Indicates if the product type is currently available for sale or use in operations.',
  `default_seed_qty` int(10) unsigned NOT NULL DEFAULT 3 COMMENT 'The initial stock quantity for new products of this type when added to inventory.',
  `avg_weight_grams` int(11) DEFAULT 0,
  PRIMARY KEY (`id`),
  UNIQUE KEY `code` (`code`)
) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Sentence: This table contains records of different product categories offered by The Vape Shed, used for inventory management and sales reporting to ensure accurate product classification and stock levels.  \nTags: product category, inventory management, sales report, product classification, stock levels, active products, default quantity';

CREATE TABLE `pack_rules` (
  `scope` enum('product','category') NOT NULL,
  `scope_id` varchar(100) NOT NULL,
  `pack_size` int(11) DEFAULT NULL,
  `outer_multiple` int(11) DEFAULT NULL,
  `enforce_outer` tinyint(1) NOT NULL DEFAULT 0,
  `rounding_mode` enum('floor','ceil','round') NOT NULL DEFAULT 'round',
  `source` enum('human','vendor','gpt','inferred') NOT NULL DEFAULT 'human',
  `confidence` decimal(4,2) NOT NULL DEFAULT 1.00,
  `updated_at` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),
  `created_at` timestamp NOT NULL DEFAULT current_timestamp(),
  PRIMARY KEY (`scope`,`scope_id`),
  KEY `ix_pack_rules_scope` (`scope`,`scope_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE `freight_rules` (
  `container` varchar(50) NOT NULL,
  `max_weight_grams` int(11) DEFAULT NULL,
  `max_units` int(11) DEFAULT NULL,
  `cost` decimal(10,2) NOT NULL,
  `created_at` timestamp NOT NULL DEFAULT current_timestamp(),
  `updated_at` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),
  PRIMARY KEY (`container`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE `product_categorization_data` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `product_id` varchar(255) NOT NULL,
  `lightspeed_category_id` varchar(255) DEFAULT NULL,
  `category_code` varchar(50) DEFAULT NULL,
  `pack_quantity` int(11) DEFAULT NULL,
  `outer_packaging` int(11) DEFAULT NULL,
  `categorization_confidence` decimal(3,2) DEFAULT NULL,
  `categorization_method` varchar(50) DEFAULT NULL,
  `categorization_reasoning` text DEFAULT NULL,
  `created_at` timestamp NOT NULL DEFAULT current_timestamp(),
  `updated_at` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),
  PRIMARY KEY (`id`),
  UNIQUE KEY `unique_product` (`product_id`),
  KEY `ix_product_categorization_prod` (`product_id`)
) ENGINE=InnoDB AUTO_INCREMENT=6838 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE `product_classification` (
  `product_id` varchar(255) NOT NULL,
  `product_type_code` varchar(50) NOT NULL DEFAULT 'unknown',
  `category_id` varchar(50) NOT NULL,
  `confidence` decimal(4,2) NOT NULL DEFAULT 0.00,
  `method` enum('unknown','lightspeed','vend_map','keyword','ai','human','rule') NOT NULL DEFAULT 'unknown',
  `reasoning` text DEFAULT NULL,
  `created_at` timestamp NOT NULL DEFAULT current_timestamp(),
  `updated_at` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),
  PRIMARY KEY (`product_id`),
  UNIQUE KEY `ux_product_classification_prod` (`product_id`),
  KEY `ix_product_classification_cat` (`category_id`),
  CONSTRAINT `fk_pc_category` FOREIGN KEY (`category_id`) REFERENCES `categories` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

CREATE TABLE `sales_summary_90d` (
  `product_id` varchar(36) NOT NULL COMMENT 'Unique identifier for each product sold in the last 90 days.',
  `outlet_id` varchar(36) NOT NULL COMMENT 'Unique identifier for the store location where the product was sold.',
  `qty_sold` int(11) DEFAULT 0 COMMENT 'The number of units sold for a specific product at a particular outlet in the last 90 days.',
  `last_updated` timestamp NOT NULL DEFAULT current_timestamp(),
  PRIMARY KEY (`product_id`,`outlet_id`),
  KEY `ix_sales_summary_90d_prod_outlet` (`product_id`,`outlet_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='Sentence: This table contains records of product sales quantities across different outlets over the past 90 days, used for analyzing recent sales trends and performance.  \nTags: recent sales trends, 90-day sales report, outlet sales comparison, product performance analysis, sales trend analysis, sales monitoring, inventory planning, sales forecasting';
